#include <stdio.h>
#include <stdlib.h>
typedef struct tipoDados{
	float valor;
}tipoDados;
typedef struct tipoNo tipoNo;
typedef struct tipoNo{
	tipoDados dados;
	tipoNo *prox;
}ripoNo;
typedef struct tipoLista{
	tipoNo *prim;
}tipoLista;
tipoLista* criaLista(){
	tipoLista *lista;
	lista=malloc(sizeof(tipoLista));
	lista->prim=NULL;
}
void insereFinal(tipoLista *lista, tipoDados d){
	tipoNo *aux;
	aux=(tipoNo*)malloc(sizeof(tipoNo));
	aux->dados = d;
	aux->prox = NULL;
	if(lista->prim == NULL){
		lista->prim=aux;
	}else{
		tipoNo *aux2 = lista->prim;
		while(aux2->prox){
			aux2=aux2->prox;
		}aux2->prox=aux;
	}
}
void insereInicio(tipoLista *lista, tipoDados d){
	tipoNo *aux;
	aux=(tipoNo*)malloc(sizeof(tipoNo));
	aux->dados=d;
	aux->prox=NULL;
	if(lista->prim ==NULL){
		lista->prim=aux;
	}else{
		aux->prox=lista->prim;
		lista->prim=aux;
	}
}
void imprime(tipoLista *lista){
	tipoNo *aux=lista->prim;
	if(lista->prim==NULL){
	}else{
		while(aux){
			printf("%.1f ",aux->dados.valor);
			aux=aux->prox;
		}
	}
}
void merge(tipoLista *lista1, int tam1, tipoLista *lista2, int tam2, tipoLista *lista3){
	tipoNo *aux1, *aux2;
	aux1=lista1->prim;
	aux2=lista2->prim;
	if(tam1>=tam2){
		while(aux2){
			insereFinal(lista3,aux1->dados);
			insereFinal(lista3,aux2->dados);
			aux1=aux1->prox;
			aux2=aux2->prox;
		}
		while(aux1){
			insereFinal(lista3,aux1->dados);
			aux1=aux1->prox;
		}
	}else if(tam1<tam2){
		while(aux1){
			insereFinal(lista3,aux1->dados);
			insereFinal(lista3,aux2->dados);
			aux1=aux1->prox;
			aux2=aux2->prox;
		}
		while(aux2){
			insereFinal(lista3,aux2->dados);
			aux2=aux2->prox;
		}
	}
}
void freeProx(tipoNo *a){
	if(a!=NULL){
		freeProx(a->prox);
		free(a);
	}
}
void freeLista(tipoLista *l){
	tipoNo *aux;
	if(l->prim){
		aux=l->prim;
		freeProx(aux);
		free(l);
	}
}

int main(){
	tipoLista *lista1, *lista2, *lista3;
	lista1 = criaLista();
	lista2 = criaLista();
	lista3 = criaLista();
	tipoDados aux;
	int tam1,tam2;
	scanf("%d",&tam1);
	for(int a=0; a<tam1; a++){
		scanf("%f",&aux.valor);
		insereInicio(lista1,aux);
	}
	scanf("%d",&tam2);
	for(int a=0;a<tam2;a++){
		scanf("%f",&aux.valor);
		insereInicio(lista2,aux);
	}
	merge(lista1,tam1,lista2,tam2, lista3);
	freeLista(lista1);
	freeLista(lista2);
	imprime(lista3);
}
