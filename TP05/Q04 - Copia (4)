#include <stdio.h>
#include <stdlib.h>
typedef struct tipoDados{
	int valor;
}tipoDados;
typedef struct tipoNo tipoNo;
typedef struct tipoNo{
	tipoDados dados;
	tipoNo *prox;
}tipoNo;
typedef struct tipoLista{
	tipoNo *prim;
}tipoLista;
tipoLista* criaLista(){
	tipoLista *lista;
	lista=malloc(sizeof(tipoLista));
	lista->prim=NULL;
}

void inserefinal(tipoLista *lista, tipoDados d){
	tipoNo *aux;
	aux = (tipoNo*)malloc(sizeof(tipoNo));
	aux->dados = d;
	aux->prox = NULL;
	if(lista->prim == NULL){
		lista->prim=aux;
	}else{
		tipoNo *aux2 =lista->prim;
		while(aux2->prox != NULL){
			aux2=aux2->prox;
		}aux2->prox=aux;
	}
}
void insereinicio(tipoLista *lista, tipoDados d){
	tipoNo *aux;
	aux=(tipoNo*)malloc(sizeof(tipoNo));
	aux->dados=d;
	aux->prox=NULL;
	if(lista->prim ==NULL){
		lista->prim=aux;
	}else{
		aux->prox=lista->prim;
		lista->prim=aux;
	}
}
int tamLista(tipoLista *lista){
	int tam=0;
	tipoNo *aux = lista->prim;
	if(lista->prim==NULL){
		return tam;
	}
	while(aux){
		tam++;
		aux=aux->prox;
	}
	return tam;
}

void inverte(tipoLista *lista1, tipoLista *lista2, tipoNo *aux){
	if(aux){
		insereinicio(lista2, aux->dados);
		inverte(lista1, lista2, aux->prox);
	}
}
void imprime(tipoLista *lista){
	tipoNo *aux=lista->prim;
	if(lista->prim==NULL){	
	}else{
		while(aux){
		printf("%d ",aux->dados.valor);
		aux=aux->prox;
		}
	}
}

int main(){
	tipoLista *lista, *lista2;
	lista = criaLista();
	lista2 = criaLista();
	tipoDados aux;
	int tam;
	scanf("%d",&aux.valor);
	while(aux.valor!=0){
		inserefinal(lista,aux);
		scanf("%d",&aux.valor);
	}
	tam=tamLista(lista);
	inverte(lista,lista2,lista->prim);
	imprime(lista2);
}
